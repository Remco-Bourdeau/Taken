// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model.Entities;

namespace Model.Migrations
{
    [DbContext(typeof(EFBankContext))]
    partial class EFBankContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Model.Entities.Klant", b =>
                {
                    b.Property<int>("KlantNr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Klantnummer")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Voornaam")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("KlantNr");

                    b.ToTable("Klanten");

                    b.HasData(
                        new
                        {
                            KlantNr = 1,
                            Voornaam = "Marge"
                        },
                        new
                        {
                            KlantNr = 2,
                            Voornaam = "Homer"
                        },
                        new
                        {
                            KlantNr = 3,
                            Voornaam = "Lisa"
                        },
                        new
                        {
                            KlantNr = 4,
                            Voornaam = "Maggie"
                        },
                        new
                        {
                            KlantNr = 5,
                            Voornaam = "Bart"
                        });
                });

            modelBuilder.Entity("Model.Entities.Rekening", b =>
                {
                    b.Property<string>("RekeningNr")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("Rekeningnummer");

                    b.Property<int>("KlantNr")
                        .HasColumnType("int")
                        .HasColumnName("Klant");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Soort")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("RekeningNr");

                    b.HasIndex("KlantNr");

                    b.ToTable("Rekeningen");

                    b.HasData(
                        new
                        {
                            RekeningNr = "123-4567890-02",
                            KlantNr = 1,
                            Saldo = 1000m,
                            Soort = "Z"
                        },
                        new
                        {
                            RekeningNr = "234-5678901-69",
                            KlantNr = 1,
                            Saldo = 2000m,
                            Soort = "S"
                        },
                        new
                        {
                            RekeningNr = "345-6789012-12",
                            KlantNr = 2,
                            Saldo = 500m,
                            Soort = "S"
                        });
                });

            modelBuilder.Entity("Model.Entities.Rekening", b =>
                {
                    b.HasOne("Model.Entities.Klant", "Klant")
                        .WithMany("Rekeningen")
                        .HasForeignKey("KlantNr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klant");
                });

            modelBuilder.Entity("Model.Entities.Klant", b =>
                {
                    b.Navigation("Rekeningen");
                });
#pragma warning restore 612, 618
        }
    }
}
